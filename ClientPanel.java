
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author fabio
 */
public class ClientPanel extends javax.swing.JFrame {

    /**
     * Creates new form ClientPanel
     */
    private Socket sock;
    private ObjectOutputStream oStream;
    private ObjectInputStream iStream;
    private String uName;
    private String serv;
    private int port;
    
    public ClientPanel() {
        initComponents();
    }
    public void initClient(String serv, int port, String uName) throws Exception{
        this.serv = serv;
        this.port = port;
        this.uName = uName;
    }
    public boolean start()
    {
        try
        {
            sock = new Socket(serv, port);
        }
        catch (Exception e)
        {
            txaOutput.append("Connection failure");
            return false;
        }

        txaOutput.append("Connection successful " + sock.getInetAddress());

        try
        {
            iStream = new ObjectInputStream(sock.getInputStream());
            oStream = new ObjectOutputStream(sock.getOutputStream());
        }
        catch (IOException ie)
        {
            txaOutput.append("Failure to create streams");
        }

        new Listen().start();

        try
        {
            oStream.writeObject(uName);
        }
        catch (IOException ie)
        {
            txaOutput.append("Bad connection");
            disconnect();
            return false;
        }
        return true;
    }

    void Send(ChatMessage mess)
    {
        try
        {
            oStream.writeObject(mess);
        }
        catch (IOException ie)
        {
            System.out.println("Failed to send");
        }
    }

    private void disconnect()
    {
        try
        {
            if(oStream != null)
            {
                oStream.close();
            }
        }
        catch (Exception e)
        {

        }
        try
        {
            if(iStream != null)
            {
                iStream.close();
            }
        }
        catch (Exception e)
        {

        }
        try
        {
            if(sock != null)
            {
                sock.close();
            }
        }
        catch (Exception e)
        {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txaOutput = new javax.swing.JTextArea();
        txfInput = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txaOutput.setEditable(false);
        txaOutput.setColumns(20);
        txaOutput.setRows(5);
        jScrollPane1.setViewportView(txaOutput);

        txfInput.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        txfInput.setForeground(new java.awt.Color(88, 81, 81));
        txfInput.setText("Type a Message");
        txfInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txfInputMouseClicked(evt);
            }
        });
        txfInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfInputActionPerformed(evt);
            }
        });
        txfInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfInputKeyPressed(evt);
            }
        });

        btnSend.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfInputActionPerformed

    private void txfInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txfInputMouseClicked
        if(txfInput.getText().equals("Type a Message")){
            txfInput.setFont(new java.awt.Font("Ubuntu", 0, 15));
            txfInput.setForeground(new java.awt.Color(0, 0, 0));
            txfInput.setText("");            
        }
        
    }//GEN-LAST:event_txfInputMouseClicked

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String msg = txfInput.getText();
        if(msg.equalsIgnoreCase("Logout"))
        {
            Send(new ChatMessage(ChatMessage.logout, ""));
            disconnect(); 
            System.exit(0);
        }
        else if(msg.equalsIgnoreCase("Connected"))
        {
            Send(new ChatMessage(ChatMessage.connected, ""));
        }
        else
        {
            Send(new ChatMessage(ChatMessage.message, msg));
        }
        
        
        txfInput.setFont(new java.awt.Font("Ubuntu", 2, 15));
        txfInput.setForeground(new java.awt.Color(88, 81, 81));
        txfInput.setText("Type a Message");            
        
    }//GEN-LAST:event_btnSendActionPerformed

    private void txfInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfInputKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btnSend.doClick();
            txfInput.setText("");
            txfInput.setFont(new java.awt.Font("Ubuntu", 0, 15));
            txfInput.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_txfInputKeyPressed

    /**
     * @param args the command line arguments
     */
    class Listen extends Thread
    {
        public void run()
        {
            while (true)
            {
                try
                {
                    String mess = (String) iStream.readObject();
                    txaOutput.append("\n"+mess);
                }
                catch(IOException ie)
                {
                    txaOutput.append("\n"+"Closed connection");
                    break;
                }
                catch (ClassNotFoundException cnf)
                {

                }
            }
        }
    }
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
               

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClientPanel client = new ClientPanel();
                client.setVisible(true);
                try {
                    client.initClient(JOptionPane.showInputDialog("IP"), 5555, JOptionPane.showInputDialog("Name"));
                } catch (Exception ex) {
                    System.out.println(ex);
                }
                if(!client.start()){
                    return;
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txaOutput;
    private javax.swing.JTextField txfInput;
    // End of variables declaration//GEN-END:variables
    
}
